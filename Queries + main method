package libraryDatabase;
import java.sql.*;
import java.util.Scanner;
public class Queries {

	public static Connection connection;
	
	
	public static void connect() {
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			connection = DriverManager.getConnection("jdbc:mysql://localhost/Library_database?serverTimezone=EST", "root", "database8");
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
	public static void addBorrower() {
		Scanner input = new Scanner(System.in);
		System.out.println("Enter borrower id: ");
		int borrowerID = input.nextInt();
		System.out.println("Enter name of borrower: ");
		String borrowerName = input.nextLine();
		System.out.println("Enter major of borrower: ");
		String major = input.nextLine();
		System.out.println("Enter date of return: ");
		String returnDate = input.nextLine();
		input.close();
		
		try {
			Connection connection = Queries.connection;
			String query = "INSERT INTO borrower VALUES (?, ?, ?, ?)";
			PreparedStatement stm = connection.prepareStatement(query);
			
			stm.setInt(1, borrowerID);
			stm.setString(2, borrowerName);
			stm.setString(3, major);
			stm.setString(4, returnDate);
			
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
	public static void availability() {
		Scanner input = new Scanner(System.in);
		System.out.println("Enter availability ID: ");
		int availabilityID = input.nextInt();
		System.out.println("Enter borrower ID: ");
		int borrowerid = input.nextInt();
		System.out.println("Enter availability of book (yes/no): ");
		String availability = input.nextLine();
		System.out.println("Enter book ID: ");
		int bookid = input.nextInt();
		input.close();
		
		try {
			Connection connection = Queries.connection;
			String query = "INSERT INTO availability VALUES (?, ?, ?, ?)";
			PreparedStatement stm = connection.prepareStatement(query);
			
			stm.setInt(1, availabilityID);
			stm.setInt(2, borrowerid);
			stm.setString(3, availability);
			stm.setInt(4, bookid);

		} catch (Exception e) {
			System.out.println(e);
		}
		
	}
	
	public static void updateAvailability() {
		Scanner input = new Scanner(System.in);
		System.out.println("Enter ID of book you wish to update: ");
		String bookID = input.nextLine();
		System.out.println("Enter availability status: ");
		String availabilityStatus = input.nextLine();
		
		try {
			Connection connection = Queries.connection;
			String query = "UPDATE availability SET availability_status = ? WHERE book_id = ?";
			PreparedStatement stm = connection.prepareStatement(query);
			stm.setString(1, availabilityStatus);
			stm.setString (2, bookID);
			stm.executeUpdate();
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
	public static void getBorrowerInfo () {
		Scanner input = new Scanner(System.in);
		System.out.println("Enter borrower id: ");
		int borrowerId = input.nextInt();
		
		try {
			Connection connection = Queries.connection;
			String query = "SELECT * FROM borrower WHERE borrower_id = ?";
			PreparedStatement stm = connection.prepareStatement(query);
			stm.setInt(1, borrowerId);
			ResultSet result = stm.executeQuery(query);
			while (result.next()) {
				String borrowerName = result.getString("borrower_name");
				String major = result.getString("major");
				String returnDate = result.getString("return_date");
				
				System.out.println("Borrower name: " + borrowerName);
				System.out.println("Major: " + major);
				System.out.println("Return Date: " + returnDate);
			}
			
		} catch (Exception e) {
			System.out.println(e);
		}
		
	}
	
	public static void getAvailability() {
		Scanner input = new Scanner(System.in);
		System.out.println("Enter book ID: ");
		int bookID = input.nextInt();
		
		try {
			Connection connection = Queries.connection;
			String query = "SELECT * FROM availability WHERE book_id = ? ";
			PreparedStatement stm = connection.prepareStatement(query);
			stm.setInt(1, bookID);
			ResultSet result = stm.executeQuery(query);
			
			while (result.next()) {
				String availability = result.getString("availability");
				System.out.println("Availabile: " + availability);
				
			}
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
		public static void main(String[]args) {
		Scanner userInput = new Scanner(System.in);
		int choice;
        do {
            System.out.println("\n1. Add borrower");
            System.out.println("2. Enter availability of a book");
            System.out.println("3. Update availability of a book");
            System.out.println("4. Get borrower info");
            System.out.println("5. Get availability info");
            System.out.println("Enter your choice: ");
            choice = userInput.nextInt();
            userInput.nextLine();

            switch (choice) {
            case 1:
                addBorrower();
                break;
            case 2:
                availability();
                break;
            case 3:
                updateAvailability();
                break;
            case 4:
                getBorrowerInfo();
                break;
            case 5:
                getAvailability();
                break;
            case 0:
                System.out.println("Exiting...");
                break;
            default:
                System.out.println("Invalid choice. Please enter a number between 0 and 5.");
        }
    } while (choice != 0);
            }
}
